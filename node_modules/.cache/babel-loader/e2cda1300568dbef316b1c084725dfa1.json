{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hung Hung\\\\Desktop\\\\todo\\\\itss_std_react_todo_k63\\\\src\\\\components\\\\Input.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { getKey } from '../lib/util';\n/* \r\n  【inputコンポーネント】\r\n　・新しいTodoを作成するINPUTフィールドを作成するコンポーネント\r\n　・Enterをクリックされたら入力された文字を使って新しいTodoを作成する\r\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Input(_ref) {\n  _s();\n\n  let {\n    addTodo\n  } = _ref;\n  const [text, setText] = useState('');\n\n  const handleChange = e => setText(e.target.value);\n\n  const handleKeyDown = e => {\n    if (e.key === 'Enter') {\n      addTodo({\n        key: getKey(),\n        text,\n        done: false\n      });\n      setText('');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"panel-block\",\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"input\",\n      onKeyDown: handleKeyDown,\n      onChange: handleChange,\n      value: text,\n      type: \"text\",\n      placeholder: \"Todo\\u3092\\u5165\\u529B\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Input, \"M8VhbSOru85VOsk7T2j5DvKRp+M=\");\n\n_c = Input;\nexport default Input;\n\nvar _c;\n\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"names":["React","useState","getKey","Input","addTodo","text","setText","handleChange","e","target","value","handleKeyDown","key","done"],"sources":["C:/Users/Hung Hung/Desktop/todo/itss_std_react_todo_k63/src/components/Input.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { getKey } from '../lib/util';\r\n/* \r\n  【inputコンポーネント】\r\n　・新しいTodoを作成するINPUTフィールドを作成するコンポーネント\r\n　・Enterをクリックされたら入力された文字を使って新しいTodoを作成する\r\n*/\r\nfunction Input({ addTodo }) {\r\n  const [text, setText] = useState('');\r\n\r\n  const handleChange = (e) => setText(e.target.value);\r\n\r\n  const handleKeyDown = (e) => {\r\n    if (e.key === 'Enter') {\r\n      addTodo({ key: getKey(), text, done: false });\r\n      setText('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"panel-block\">\r\n      <input\r\n        className=\"input\"\r\n        onKeyDown={handleKeyDown}\r\n        onChange={handleChange}\r\n        value={text}\r\n        type=\"text\"\r\n        placeholder=\"Todoを入力してください\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Input;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,QAAuB,aAAvB;AACA;AACA;AACA;AACA;AACA;;;;AACA,SAASC,KAAT,OAA4B;EAAA;;EAAA,IAAb;IAAEC;EAAF,CAAa;EAC1B,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;;EAEA,MAAMM,YAAY,GAAIC,CAAD,IAAOF,OAAO,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAnC;;EAEA,MAAMC,aAAa,GAAIH,CAAD,IAAO;IAC3B,IAAIA,CAAC,CAACI,GAAF,KAAU,OAAd,EAAuB;MACrBR,OAAO,CAAC;QAAEQ,GAAG,EAAEV,MAAM,EAAb;QAAiBG,IAAjB;QAAuBQ,IAAI,EAAE;MAA7B,CAAD,CAAP;MACAP,OAAO,CAAC,EAAD,CAAP;IACD;EACF,CALD;;EAOA,oBACE;IAAK,SAAS,EAAC,aAAf;IAAA,uBACE;MACE,SAAS,EAAC,OADZ;MAEE,SAAS,EAAEK,aAFb;MAGE,QAAQ,EAAEJ,YAHZ;MAIE,KAAK,EAAEF,IAJT;MAKE,IAAI,EAAC,MALP;MAME,WAAW,EAAC;IANd;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAYD;;GAxBQF,K;;KAAAA,K;AA0BT,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}